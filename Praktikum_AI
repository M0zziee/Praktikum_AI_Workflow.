{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNvstsYYMEya5MMUW5P6EEX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Membaca file CSV**\n","\n","```\n","import pandas agar bisa membaca file yang di import yaitu \"Data_Penjualan.csv\"\n","Lalu Melimitasi data menjadi 10 data\n","```\n","\n","\n"],"metadata":{"id":"q4N3Ty9FOa7z"}},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"mredlA0yS7FF","executionInfo":{"status":"ok","timestamp":1741278467727,"user_tz":-420,"elapsed":63,"user":{"displayName":"Muhammad Fathir Ramada","userId":"17186569337717301090"}},"outputId":"501a4b09-7f64-48f6-e0dd-f75fa384d643"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Tanggal      Produk  Jumlah Terjual  Stok  Harga Satuan\n","0   2/2/2025        Ayam              10    20         15000\n","1   2/3/2025       Bayam               5    15          5000\n","2   2/4/2025    Kangkung               7     8          4000\n","3   2/5/2025      Minyak               3    12         10000\n","4   2/6/2025      Pisang              12    25          2000\n","5   2/7/2025     Kentang              10    12          8000\n","6   2/8/2025       Tomat               5    10          3000\n","7   2/9/2025        Tahu              15    18          7000\n","8  2/10/2025       Tempe              10    25          5000\n","9  2/11/2025  Susu Kotak              20    22          5000"],"text/html":["\n","  <div id=\"df-831cc8f0-3233-40b8-af15-dfdaa96066ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tanggal</th>\n","      <th>Produk</th>\n","      <th>Jumlah Terjual</th>\n","      <th>Stok</th>\n","      <th>Harga Satuan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2/2/2025</td>\n","      <td>Ayam</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>15000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2/3/2025</td>\n","      <td>Bayam</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>5000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2/4/2025</td>\n","      <td>Kangkung</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>4000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2/5/2025</td>\n","      <td>Minyak</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2/6/2025</td>\n","      <td>Pisang</td>\n","      <td>12</td>\n","      <td>25</td>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2/7/2025</td>\n","      <td>Kentang</td>\n","      <td>10</td>\n","      <td>12</td>\n","      <td>8000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2/8/2025</td>\n","      <td>Tomat</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>3000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2/9/2025</td>\n","      <td>Tahu</td>\n","      <td>15</td>\n","      <td>18</td>\n","      <td>7000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2/10/2025</td>\n","      <td>Tempe</td>\n","      <td>10</td>\n","      <td>25</td>\n","      <td>5000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2/11/2025</td>\n","      <td>Susu Kotak</td>\n","      <td>20</td>\n","      <td>22</td>\n","      <td>5000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-831cc8f0-3233-40b8-af15-dfdaa96066ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-831cc8f0-3233-40b8-af15-dfdaa96066ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-831cc8f0-3233-40b8-af15-dfdaa96066ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-efffef73-a476-49b1-9b72-59da9e8232d2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-efffef73-a476-49b1-9b72-59da9e8232d2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-efffef73-a476-49b1-9b72-59da9e8232d2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"(df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Tanggal\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2/10/2025\",\n          \"2/3/2025\",\n          \"2/7/2025\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Produk\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Tempe\",\n          \"Bayam\",\n          \"Kentang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jumlah Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 3,\n        \"max\": 20,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10,\n          5,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 8,\n        \"max\": 25,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15,\n          10,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3835,\n        \"min\": 2000,\n        \"max\": 15000,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5000,\n          8000,\n          15000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}],"source":["import pandas as pd\n","#Read File CSV\n","df = pd.read_csv('Data_Penjualan.csv')\n","\n","#hasil data\n","(df.head(n = 10))"]},{"cell_type":"markdown","source":["**Menyesiuaikan Dan Menambah kolom**\n","\n","```\n","1. Konversi kolom \"Tanggal\" ke Format DateTime\n","2. Menambah Kolom \"Total Penjualan\"\n","3. tambahkan kolom \"Keuntungan\" dengan rumus (Total penjualan  - jumlah terjual * 4000)\n","```\n"],"metadata":{"id":"Hzn84DGtPDJO"}},{"cell_type":"code","source":["#check if data Empty\n","print(df.isnull().sum())\n","\n","#Konversion collum \"Tanggal\" to datetime\n","df['Tanggal'] = pd.to_datetime(df['Tanggal'])\n","\n","#add Collum \"Total Penjualan\"\n","df[\"Total Penjualan\"] = df[\"Jumlah Terjual\"] * df[\"Harga Satuan\"]\n","\n","# tambahkan kolom \"Keuntungan\" (asumsi modal 4.000 per product)\n","df['Keuntungan'] = df['Total Penjualan'] - (df['Jumlah Terjual'] * 4000)\n","\n","#hasil data\n","(df.head(n = 10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"3J4vIY-tUJDo","executionInfo":{"status":"ok","timestamp":1741278467772,"user_tz":-420,"elapsed":44,"user":{"displayName":"Muhammad Fathir Ramada","userId":"17186569337717301090"}},"outputId":"379357f8-6fce-46dc-b755-abdf51fe36f0"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Tanggal           0\n","Produk            0\n","Jumlah Terjual    0\n","Stok              0\n","Harga Satuan      0\n","dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["     Tanggal      Produk  Jumlah Terjual  Stok  Harga Satuan  Total Penjualan  \\\n","0 2025-02-02        Ayam              10    20         15000           150000   \n","1 2025-02-03       Bayam               5    15          5000            25000   \n","2 2025-02-04    Kangkung               7     8          4000            28000   \n","3 2025-02-05      Minyak               3    12         10000            30000   \n","4 2025-02-06      Pisang              12    25          2000            24000   \n","5 2025-02-07     Kentang              10    12          8000            80000   \n","6 2025-02-08       Tomat               5    10          3000            15000   \n","7 2025-02-09        Tahu              15    18          7000           105000   \n","8 2025-02-10       Tempe              10    25          5000            50000   \n","9 2025-02-11  Susu Kotak              20    22          5000           100000   \n","\n","   Keuntungan  \n","0      110000  \n","1        5000  \n","2           0  \n","3       18000  \n","4      -24000  \n","5       40000  \n","6       -5000  \n","7       45000  \n","8       10000  \n","9       20000  "],"text/html":["\n","  <div id=\"df-77467f54-fd99-4e45-b4c5-905fe65a9d8a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tanggal</th>\n","      <th>Produk</th>\n","      <th>Jumlah Terjual</th>\n","      <th>Stok</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Penjualan</th>\n","      <th>Keuntungan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2025-02-02</td>\n","      <td>Ayam</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>15000</td>\n","      <td>150000</td>\n","      <td>110000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2025-02-03</td>\n","      <td>Bayam</td>\n","      <td>5</td>\n","      <td>15</td>\n","      <td>5000</td>\n","      <td>25000</td>\n","      <td>5000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2025-02-04</td>\n","      <td>Kangkung</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>4000</td>\n","      <td>28000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2025-02-05</td>\n","      <td>Minyak</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>10000</td>\n","      <td>30000</td>\n","      <td>18000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2025-02-06</td>\n","      <td>Pisang</td>\n","      <td>12</td>\n","      <td>25</td>\n","      <td>2000</td>\n","      <td>24000</td>\n","      <td>-24000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2025-02-07</td>\n","      <td>Kentang</td>\n","      <td>10</td>\n","      <td>12</td>\n","      <td>8000</td>\n","      <td>80000</td>\n","      <td>40000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2025-02-08</td>\n","      <td>Tomat</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>3000</td>\n","      <td>15000</td>\n","      <td>-5000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2025-02-09</td>\n","      <td>Tahu</td>\n","      <td>15</td>\n","      <td>18</td>\n","      <td>7000</td>\n","      <td>105000</td>\n","      <td>45000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2025-02-10</td>\n","      <td>Tempe</td>\n","      <td>10</td>\n","      <td>25</td>\n","      <td>5000</td>\n","      <td>50000</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2025-02-11</td>\n","      <td>Susu Kotak</td>\n","      <td>20</td>\n","      <td>22</td>\n","      <td>5000</td>\n","      <td>100000</td>\n","      <td>20000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77467f54-fd99-4e45-b4c5-905fe65a9d8a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-77467f54-fd99-4e45-b4c5-905fe65a9d8a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-77467f54-fd99-4e45-b4c5-905fe65a9d8a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-22391b07-4ba5-4665-b2c7-569187eed9c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22391b07-4ba5-4665-b2c7-569187eed9c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-22391b07-4ba5-4665-b2c7-569187eed9c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"(df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Tanggal\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-02-02 00:00:00\",\n        \"max\": \"2025-02-11 00:00:00\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2025-02-10 00:00:00\",\n          \"2025-02-03 00:00:00\",\n          \"2025-02-07 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Produk\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Tempe\",\n          \"Bayam\",\n          \"Kentang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jumlah Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 3,\n        \"max\": 20,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10,\n          5,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 8,\n        \"max\": 25,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15,\n          10,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3835,\n        \"min\": 2000,\n        \"max\": 15000,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5000,\n          8000,\n          15000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Penjualan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45570,\n        \"min\": 15000,\n        \"max\": 150000,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          50000,\n          25000,\n          80000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Keuntungan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 37086,\n        \"min\": -24000,\n        \"max\": 110000,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          10000,\n          5000,\n          40000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["**INSTALL scikit-learn**"],"metadata":{"id":"G3Tg8_2OQNLC"}},{"cell_type":"code","source":["!pip install scikit-learn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xDwGY3qrabPL","executionInfo":{"status":"ok","timestamp":1741278470246,"user_tz":-420,"elapsed":2474,"user":{"displayName":"Muhammad Fathir Ramada","userId":"17186569337717301090"}},"outputId":"ff9081c2-7ca3-4e76-8376-47e11110f206"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (1.6.1)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.26.4)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.13.1)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (3.5.0)\n"]}]},{"cell_type":"markdown","source":["**Latih Model Machine Learning**\n","\n","\n","```\n","#pertama import dulu\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score\n","```\n","\n"],"metadata":{"id":"YI1W-2_0QbZH"}},{"cell_type":"code","source":["#Machine Learning\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score\n","\n","# choose Fitur (X) dan Target (Y)\n","x = df[['Jumlah Terjual', 'Stok']]\n","y = (df['Stok'] < 5).astype(int) #<-- 1 jika stok kurang dari 5, 0 cukup\n","\n","#split data to train and test\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n","\n","#buat model decision tree\n","model = DecisionTreeClassifier()\n","model.fit(x_train, y_train)\n","\n","#prediksi\n","y_pred = model.predict(x_test)\n","print (\"Akurasi Model: \", accuracy_score(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xA54KbBeamaC","executionInfo":{"status":"ok","timestamp":1741278470258,"user_tz":-420,"elapsed":11,"user":{"displayName":"Muhammad Fathir Ramada","userId":"17186569337717301090"}},"outputId":"5d3acc33-3f6c-4889-a96f-474525dc95ac"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Akurasi Model:  1.0\n"]}]},{"cell_type":"markdown","source":["**Menggunakan model AI untuk memprediksi apakah suatu produk perlu di-restock**"],"metadata":{"id":"nYhnXL_nQxGM"}},{"cell_type":"code","source":["#contoh produk baru (jumlah terjual 8, stok tersisa 3)\n","produk_baru = ([[8, 3]])\n","prediksi = model.predict(produk_baru)\n","\n","if prediksi[0] == 1:\n","  print(\"Produk Perlu di-restock!\")\n","else:\n","  print(\"Produk Masih Cukup!\")"],"metadata":{"id":"jv1eeCOza8zk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1741278470264,"user_tz":-420,"elapsed":7,"user":{"displayName":"Muhammad Fathir Ramada","userId":"17186569337717301090"}},"outputId":"2606c2e4-cb2d-4e0a-b685-73e4294265f7"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Produk Masih Cukup!\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["**Menampilkan visualisasi untuk melihat pola stok dan penjualan**"],"metadata":{"id":"GyC_DfJeQ8am"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.scatter(df['Jumlah Terjual'], df['Stok'], c=df['Keuntungan'], cmap='coolwarm')\n","plt.xlabel('Jumlah Terjual')\n","plt.ylabel('Stok')\n","plt.title('Analisis Penjualan dan stok')\n","plt.colorbar(label='Keuntungan')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"m-ks49oWeoWS","executionInfo":{"status":"ok","timestamp":1741278470648,"user_tz":-420,"elapsed":380,"user":{"displayName":"Muhammad Fathir Ramada","userId":"17186569337717301090"}},"outputId":"50d30ba1-b44b-4040-8e2f-08d0439d692a"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Kesimpulan**\n","\n","\n","```\n","• Kita sudah mengunggah data ke Google Colab.\n","• Kita membersihkan dan memproses data.\n","• Kita mela􀆟h model AI untuk memprediksi stok barang.\n","• Kita mengevaluasi dan menggunakannya untuk prediksi.\n","• Kita menganalisis hasil dengan visualisasi.\n","😎\n","```\n","\n"],"metadata":{"id":"MRAHYwofR22W"}}]}